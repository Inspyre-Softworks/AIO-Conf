# .github/workflows/release.yml
name: Publish to PyPI / TestPyPI based on version

on:
  push:
    tags:
      - "v*"
      - "*"        # allow bare 1.2.3 tags too; drop if you only use 'v'

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      id-token: write   # REQUIRED for Trusted Publishing (PyPI/TestPyPI)
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install build tooling
        run: python -m pip install --upgrade build packaging

      - name: Build sdist & wheel
        run: python -m build

      - name: Decide target index (PEP 440-aware)
        id: decide
        env:
          TAG: ${{ github.ref_name }}
        run: |
          VERSION="${TAG#v}"  # strip leading 'v' if present
          echo "version=$VERSION" >> "$GITHUB_OUTPUT"
          python - <<'PY'
          import os
          from packaging.version import Version, InvalidVersion
          v = os.environ["VERSION"] = os.environ.get("VERSION") or os.environ["TAG"]
          try:
              ver = Version(v)
              pre = ver.is_prerelease or ver.is_devrelease
          except InvalidVersion:
              # Not PEP 440 → play it safe and treat as pre-release
              pre = True
          with open(os.environ["GITHUB_OUTPUT"], "a") as out:
              out.write(f"is_prerelease={'true' if pre else 'false'}\n")
          PY

      # Pre-releases (a*, b*, rc*, *.dev*) → TestPyPI
      - name: Publish to TestPyPI (pre/dev)
        if: ${{ steps.decide.outputs.is_prerelease == 'true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

      # Stable (no a/b/rc/dev) → PyPI
      - name: Publish to PyPI (stable)
        if: ${{ steps.decide.outputs.is_prerelease != 'true' }}
        uses: pypa/gh-action-pypi-publish@release/v1
